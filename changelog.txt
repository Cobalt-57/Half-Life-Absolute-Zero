---------------------------------------------------------------------------------------------
<unversioned>

Previously mentioned zombie pushback change was incomplete.  Headshot damage no longer deals extra pushback.  Pushback damage also has diminishing returns with increasingly high damage in one frame: weak sources of damage (glock, mp5) deal full pushback while close-range shotgun blasts are cut by 25%, fully-charged gauss shots by half.
-ALSO, crossbow bolts no longer deal pushback, but still take bullet reduction percentages.
-Future support for explosions to deal pushback, or for more monsters to support pushback possible.

HUD battery no longer drawn on top of the pain flash effect.  Pain flash is now drawn after all typical UI draw calls to be safe.

HIGH-FVOX-VOLUME SUIT CRASH
Changing the "HEV suit volume" slider in Settings, Audio to over half produces a "suitvolume" (CVar) over 1.0, as the slider range is 0 to 2.  Values over 1 crash the game when FVOX sounds are made.  For now, any references to "suitvolume" are divided by 2 to still make use of the full slider.

missing "640hud7mod.spr" crash on developer 2 fixed, bad reference to that in sprites/weapon_chumtoad.txt reverted.  Ammo icons are not even used.

Slight improvements made to crowbar tracing used to find a target.  Most notably, better at detecting head-hits (mostly on a direct-hit) for extra damage and the approximate-hit detection is a little better in general up close.  Particles also no longer drawn close to the camera on certain circumstances.

monster_scientist_dead and monster_barney_dead (although difficult to prove it was ever the case for the latter) now have mouth-graphics open as seen in some pre-release screenshots.  Does not apply to ingame killed NPC talkers, only these special pre-dead spawned ones.

ALSO, talkers slightly more responsive.  On being warned by nearby friends, scientists jump to a flee schedule immediately and barnies unholster their guns, although these things likely happened soon after the player came into sight anyway.
More importantly, NPC's should not wait to finish talking to a player while following and TASK_WAIT is forcing a delay.  No sense standing still during that time.

Houndeyes close eyes near the end of killed animations.  Squadleader houndeyes will also be more responsive to sounds immediately after playing leaderlook in some cases (used to be an enforced 5 second delay of ignoring sounds to turn and face)

SKILL.CFG:
Player ammo reserves and timed damage info (duration / damage per tick) can now be specified in skill.cfg.   Player ammo reserves are not specified per skill, only once.
Also skills to control whether NPCs drop weapons per difficulty, and whether scientists can heal per difficulty (not amount healed, this is already in the file)

Corpses move a bit in the direction of the last attack endured when enemies die.

hud_version changed.
0: green; very early sprites, battery in right sidebar (while weapon select is open)
1: newer sprite graphics for health/ammo, still battery in right sidebar.
2: battery moved to near health, shown at all times.
3: E3; closer to retail and yellow

RPG lasersight can be toggled on/off while it is forced invisible (like while reloading the RPG).  Also checks for tapping the mouse button to register this, not holding it down.

Hand grenades support grenade tossing.  Right-click to throw it a shorter, generally lower distance.  Holding both mouse buttons does not release the grenade.

hud_weaponSelectHidesLower - NEW CVAR CHOICE.
Use 2 to bump the right sidebar up (visible while weapon select is open typically)
to let hud_versions other than 2 show the bottom-right ammo numbers too.

Added generic hit/miss sounds to the bullsquid's tail-whip attack.  Seemed odd to make no noise if it misses, unlike most other melee.

CVar "useAlphaCrosshair" removed.  Use the built-in "crosshair" to handle this instead.
0: none
1: alpha crosshair (console "t" letter)
2: retail crosshair (varries per weapon)


MAJOR BUGFIX:  revive called commonreset, but did not get updates from some clientside CVars to restore to their old values.
That is, dying -> revive with cl_fvox on would act as though cl_fvox were off after (default).  May have explained other oddness following revives.

MAJOR BUGFIX:  likely cause of "game thinks you're dead when you're really not or vice versa" glitch addressed.

Various new HEV sounds able to be called for from sentences.txt, such as HEV_E1 on running out of battery, HEV_E2 on being gibbed, HEV_E3 40% of the time on non-gib deaths.

"torniquette_applied" from sentence "HEV_HEAL1" now one of the 3 choices for ending bleeding damage early with healing

Thrown grenades no longer jitter like the dickens.
Yes, those were supposed to be animations.

The 'view bob as though moving while killed and not moving' glitch fixed... maybe.

NEW COMMAND:  getmap, currentmap, thismap,   to get the name of the current map.  Imagine that!

The default skybox "desert" is enforced if a map lacks a "skyname" keyword to specify it.
That is, a map that does not give a skyname (like crossfire.bsp) no longer borrows the skybox from the previously run map ('night' if the player was previously on a2a2.bsp, for example)

Revive logic reworked.  Revives in bad conditions (interrupting moving map geometry like func_rotating, falling too far while dead, high trigger-inflicted damage, etc.) should no longer be possible.
Battery also hidden while dead, including waiting on revive (CVar hud_batteryhiddendead).

Barney 'running into crouched zombie' issue resolved.  Bad logic in determining a point to attack, and the fallback was pathfinding to them endlessly.  Which looks stupid when the foe is in plain sight.

Python lasersight fixed a bit, RPG one was a while back.  Leaving the python lasersight on while paused no longer crashes.  Yep.  That happened.

TODO:  scientists that fear the player in a very limited place lag the whole game like hell.
      See in a scientist on top of another NPC (zombie?), and shoot at the scientist without killing.  Lag ahoy.
GOT IT.  And it was in a very bizarre circumstance like having a scripted sequence but being interrupted by a barnacle, then landing on top of a monster.
I'm surprised 300 people didn't run into this on their first playthrough, it honestly seems like that's how it always goes.

NEW CVAR:
monsterKilledToss - lets corpses move a short distance, depending on amount of overkill in the killing hit.

talker passives (scientists) no longer stare dumbly at sentries or turrets mowing them down.  Yeah.  what?

Shotgun viewmodel logic improved, most notably with holding down double-fire.  It should no longer be possible to play clip-entry sounds on exiting shell-loading.

Headshots to zombies no longer cause any pushback.

Various scripted-sequence breaking problems done, tested with a1a2's garg vs. hgrunt sequences.  Check for side-effects anywhere else but the slight change should be safe.

More unused scientist sounds added and tiny chance of a few pre-disaster ones to show up after disaster ('wear ties' and hungry ones.  They are whiny nerds after all)

---------------------------------------------------------------------------------------------
2.0_M 

Ladder logic changed, faster overall for alpha (cl_ladder 0), slower for retail-style (cl_ladder 1).
Overall, gap between the two in speed greatly reduced.

Battery sprites better scaled to not include dead space in the partial shading.
That is, 0 to 10% should make a difference in the appearance of the battery, not fill in empty
space below the battery (no change in appearance).

---------------------------------------------------------------------------------------------
2.0_N

NPC walker interp glitch (jitter while moving) fixed.

"deploy glock since saving game anim delaying to show silencer" issue fixed.

In skill.cfg, using "-1" will stop a timed damage type from having any effect, even the icon that "0" still gives.
Only bleeding listens for a value of -1 so far to guarantee never showing the icon, ordinary timed-damage logic runs infrequently and can miss it.

Timed damages also no longer deal damage during the immediate frame they are given.  That is, a zombie slash of 25 damage used to deal 26 (bleeding's '1' immediately),
on top of the duration times damage (15*1 on medium).  This also means damage durations of 0 or -1 won't deal any damage.

***able to get stuck in scientists at a vending machine & inspecting machines, TODO...***

---------------------------------------------------------------------------------------------
2.0_O

Hits to Barney's helmet no longer cause blood or hit sounds, just like hgrunt and agrunt helmet/armor hits

Other old scientist pain sounds added back in.

PainSound reworked a bit, scientists and barnies will make pain noises less often on taking timed damage.

ALSO, timed damage does 15% damage to talkers, 60% for all other monsters/NPCs.
This makes timed damages much less of a certain 'death sentence' for NPC talkers.

Few sentences from unused files for Barnies added.

NPC's forced to unfollow from reaching the follower limit (1 by default) will not say the unfollow line.
Unfollow sentences also won't be attempted for unfollowing due to taking damage from other monsters.

Gauss beam improvements.  Beam colors follow the likely intended logic with some other enhancements.  Volume/attenuation for various damages redone.

Similar fix applied to egon in color only, no extra touchups.  No change between software or hardware graphics modes either.

Scientists should always (or at least very soon) put the syringe away if healing is no longer necessary or the scientist unfollows before healing.  They will also not withdraw the syringe simply because the target moves.

Movement over downward inclines and stairs is now as smooth as upward inclines/stairs in retail.

Idle animations for scientists and barnies slowed, especially in pre-disaster.  Common standing idles are slowed the most.  Slightly faster while talking.

Ladder jump-off force reduced a bit.  Jumping off a ladder now only works on the key (typically space) being pressed for the first frame, not continuously, so that holding space too long in a tight jump to a ladder doesn't immediately fall off.

Blood logic reworked, again.  Damage done per attack factors into the amount of blood.

Blood-spray decals will no longer be drawn if the blood-drip effect was disabled (usually from armor absorbing the shot, shows a ricochet effect).

Retail blood effect is available by CVar: "sv_bloodparticlemode", defaults to 1.

Mortar (prominent in a1a3b.bsp) nerfed, degree depends on skill.  On Hard difficulty, it is only slighlty less damaging, range is more significantly impacted.

Very minor agrunt improvements.  Won't aim extremely high/low on getting close while it range-attacks.
Also no longer adding retail blood sprite drops on melee hits.  Whoops.

Gibbed monster sound effects should no longer be overshadowed by other sounds, most notably like a barnacle making chew sounds shortly after gibbing what it held.

Gargantua can be hurt by gauss shots charged enough, but takes 30% less damage from them.

Gauss does 16% less damage on aircraft in non-critical areas (not the cockpit or engines).

Gauss makes hit-sounds on monsters.

Blood type 'green' restored to be distinct from 'yellow' all aliens had in retail, some monsters use this now.

Machines (mainly sentries) play metal-sounds when hit with bullets.

Snarks can now gib with alpha blood, not forced to retail.

Step sound while crouched reduced slightly (35% to 30%)

Viewpunch (recoil / getting knocked by melee hits, alpha ladder effect) decays more smoothly and slightly faster.
Viewpunch of alpha ladders reduced slightly on top of this.

Alpha ladder view effects moved from serverside-only (player.cpp) to pm_shared.c.  Might not appear different for singleplayer or low-latency multiplayer.

Hits on armored enemies (hgrunt/barney helmets, agrunt helemt or body plating).

All get the same 50% chance of a bullet ricochet effect the agrunt has for bullet hits, and damage logic changed.
~Bullet damage: Instead of near-0 damage for 20-or-under hits, damage reduced to 12%.  Even piercing hits to armor (over 20) do 15% less damage.
~Melee damage: Hits to armor reduced by 40% instead.
~Blast damage: no longer pays attention to armor hits, flat damage reduction that assumes it was hit.  Explosions are more of an 'area of effect' than a precise strike like other weapons, it doesn't make as much sense to care what hitgroup a line from an explosion to the center of an entity hits.
~ In general, HGrunts take 20% less damage from explosions, Agrunts take 30% less damage from explosions, Barnies take 50% less damage from explosions (their low health doesn't stop insta-kills from near direct hits)
~Barny kevlar more effective against weak bullet damages (60% reduction).
~HGrunt kevlar (body shots) reduces weak bullet damage (5 or less; includes mp5 and shotgun shells) lose 30% damage.  Higher bullet damage loses 15% damage instead.
~ Bullet damage anywhere else (arms, legs) loses 10%, Barnies too.  Non-armor agrunt bullet damage does 8% less damage.

AGrunts should no longer skip the sound-sentence-save system when playing some sounds (lead to 'sound not precached' warnings in console).  No file in the mentioned 'agrunt/bflinch.wav' of sequence 'bigflinch' exists, however.

Uncrouching rapidly no longer puts the player in the air momentarily.  Uncrouching while in the middle of a crouch is smooth now.

New CVAR: cl_interp_view_extra.  Default is 1 so that crouching/uncrouching rapidly looks smooth.  2 lets midair crouching/uncrouching look more smooth. 0 goes to no additional smoothness beyond retail (besides the downward stairs/incline improvement).

Scientists not in a combat state will run away when attacked with their backs turned.  Go figure.

Issue from falling monsters losing interp (animation smoothness) shortly after touching the ground from a fall (usually monsterKilledToss other than 0 to cause this) should be resolved, mostly.  Hacky solution.

CVar 'cl_server_interpolation' renamed to 'cl_interp_entity'.
New CVar:  'cl_interp_viewmodel'.  Simulates lack of interpolation to add choppiness to viewmodels when off.

Ricochet effect on agrunt armor & hgrunt/barney helmets uses the 'normal' of whatever surface it hit instead of going roughly in the direction of where it came from unconditionally.
It also... is used correctly.  Didn't receive the end-point correctly in retail, does now.  Engine often hides the effect up-close however.

recent-weapon-switching ('q' key by default) now involves cl_holster.  Possible slight client/server synch issue with cl_holster in general fixed too.
Also applies to orders to change weapons from picking up a new weapon.

Issue fixed with deploy animation replaying if killed/revived while a holster was in progress.

General satchel fixes.  Holsters automatically instead of instantly disappearing after detonating the last charges (no more ammo), and removed from inventory the moment
the weapon is unequipped without ammo or charges to detonate (instead of being pickable again if the player switches weapons shortly after detonating the last charges).
Picking up satchel charges with an empty-satchel weapon also correctly updates the viewmodel as though freshly picked.

Shotgun tightened, times between firing single-wise and double-wise finer (single slightly moreso for balance reasons).
Reload times between bullets inserted also improved slightly.
Pressing reload is more responsive; the order is remembered and applied as soon as possible (which can skip the last portion of the reload animation).

AI is alerted by all weapons at greater ranges now.  RPGs and shotguns (especially double-fire) have the greatest boosts.

Snark throw animation throws the snark at the time suggested by the new animation instead of instantly.
Chumtoad viewmodel anim/logic sync also improved, requires chumtoad to be visible before re-throwing

Explosive damage can now deal knockback, see CVar "sv_explosionknockback".

Interrupting a reload from being out of clip-ammo (change weapon) shouldn't replay the deploy animation, nor play reload after it finishes.

Weapon-select changes:
-Selecting a slot without any weapons no longer makes a noise.  Still shows the menu without any focused items.
-hud_fastswitch closes the weaponselect menu on making a selection when the slot-key is pressed (only 1 item in that slot for this to happen).  Also plays the weapon-select sound instead, not the one for opening the menu.
-hud_fastswitch does not make a noise if it did not change the weapon (already has crowbar out).
-Selecting the same weapon as what's already equipped only plays the hud-close sound.
-the menu-open sound only plays on opening the menu since a close (not picking different slots by number keys while open).  Go figure.
-Right-click cancels the weapon-select menu.
-Using recent-weapon-swap (q key by default) closes the weapon-select menu with the close sound if open.

Loaded games on maps that show the title (a1a0) no longer re-show the title on loaded games.
~Strangely requires loading another game or going to another map first since starting the game for the issue to appear.  Straight to loading the game shows nothing, even before the fix.

VOX announcer (global announcements heard throughout the facility) lines slightly less frequent, especially on minimum bound (less likely to get messages play as close together).

Scientist in interruptable scripted sequences/schedules (able to talk with a response still like looking inquisitive at walls or vending machines) can now make idle chatter like in retail.  Whoops.

Scientists in scripted schedules no longer decide to play scripted sequences if doing so would intersect with the player.  Also whoops. Also stricter pathfinding requirements more like retail, ignores pathfindEdgeCheck

Talkmonsters in custom-talkable scripted states (like above) are more likely to converse.

Talkmonsters should also not have a chance of... conversing with others behind solid walls.    Not sure what I was smoking.

Attenuations for scripted sounds and sentences (especially sounds such as footsteps and the scientist pushing buttons and banging on the vending machine) reduced.  That is, they can be heard from further away.

Don't try to talk to NPC's pre-disaster 30 times in rapid succession.  Especially Barney. Things may get ugly.  Muhahahah.

The USE entity-finding further improved.  Will pick an entity that is closer of two in view if they are similarly in the right direction.

Obscure pathfinding bugs fixed, should not flinch rapidly anymore in certain cases.

Secondary gauss hits on certain map geometry (any range, not at an angle to reflect), no longer damages the player.
Radius damage from charged hits also changed:
-From point hit on reflected surfaces: no longer dependent on the angle of a reflection, deals a flat 45% with less range.
-From exit points of pierced map geometry: 40% of damage, less range.

Added support for a gauss beam that no longer follows the weapon after firing (cl_gaussfollowattachment of 0; not on by default).

Failing to revive, despite having adrenaline+suit, after dying shortly after loading a map fixed.

Crossbow between-shot delay increased from 0.75 seconds to 1.50.

Controller pathfinding in intended maps fixed (retail-like).  Just proof of pathfinding's stablity for other places.

Fixed cause of rare slowdowns during pathfinding due to bad addition(s).

NEW CVAR: cl_breakholster.  Controls holstering for quick-swap (q key) and picking up a new weapon instead.  1 disallows holstering, 0 allows it for these cases.
cl_holster still controls typical weapon select (number keys or mouse wheel + click).

Greandes placed on the ground by hgrunts now stand upright and don't clip through the ground.
Thrown grenades should no longer appear to float above the ground when it is reached, nor should they suddenly face sideways.

Final greater blood effect much more likely to appear for low-damage-per-shot weapons such as the shotgun.

Headcrab jumps have a slight cooldown between jumps, mainly to avoid spamming jump-attempts in place.  Shorter on harder difficulties.
Headcrab jumps slightly longer, even moreso with higher difficulty.
Headcrabs also turn faster, and moreso with difficulty.

a1a2 hgrunt vs. gargantua sequence breaking, even in WON, fixed!   I, think?

By CVAR: cl_mp5_kickbackmode, defaults to 0 (off).  When on, mp5 random kickback no longer includes very low ranges, slightly higher on average and more consistent.

---------------------------------------------------------------------------------------------

2.0_O4
~recent broken-ness in vents caused by a paranoid pre-jump-check fixed.  Whoops.
~Homicidal barnies from recent update fixed.  Homicidal everything really.
~Large pathfinidng bug caused by accidental debug shortcut.  Oops.

Timed Damage buddha mode implemented, only active in easy difficulty by default (see 'tdmg_buddha' in skill.cfg).  Affects monsters and players.
~Does not allow timed damage to kill, leaves health at 1.

---------------------------------------------------------------------------------------------
2.0_O5  (whoops, forgot to include this in the changelog before a sendout)
~visible debug trace-lines removed.  Whoops.  Better system in place to stop this from happening in the future, any debug trace-lines using this feature require a CVar of 


---------------------------------------------------------------------------------------------
2.0_P (upcoming)

Breakable destroyed-sounds better factor in overkill and carry over a further distance than most other sounds, especially from more overkill.
(the change no one asked for, yay).

CVar 'disablePauseSinglePlayer' re-enabled.

New CVars, 'pausecorrection1' and 'pausecorrection2', related to denying certain logic on noticing the game is paused (ESC menu or console is up), avoids oddities with viewmodels or console complaints about overflowing queued sounds that can happen while paused.
For single-player only.  The defaults should be fine.  pausecorrection2 has two modes, '1' and '2'.  Both 0 is retail handling (no extra checks).
pausecorrection2 at setting '2' is better for very low host_framerate choices.

Taking multiple hits from the same trigger_hurt while the game is paused while the player is standing inside one (green water, etc.) should no longer be possible.

Timed damage now ticks while standing in a trigger_hurt.  Before, a trigger_hurt dealing 0 direct damage would stall the timed damage indefinitely (despite showing up on the HUD) until the player leaves the trigger.

Verified: buddha timed damage is ignored if standing in a source of the timed damage (so that standing in a pool of green water that does 0 direct damage wouldn't make the player seem immune to damage).

a1a2 hgrunt vs. garg sequence last fix: no longer an unintentional 5 second delay of dead hgrunt AI, obvious on running into the sequence as soon as the map loads (general scripted fix).
Also, garg should have a better time moving around after the sequence ends (blocked by a func_monsterclip).  The garg is still unable to move over the tracks (dip in the floor) but this is an engine thing.

grenades no longer travel as far up ramps compared to even ground, and change to the on-ground animation frame on the start of contact with the ground (not a near-complete stop).

hud_rpg_alpha_ammo is finally a CVar, woohoo.  Able to turn off RPG ammo clip+reserve being combined.

hornet gun updates the ammo counter anytime it is out, not only outside of fire-delays and deploy/holster animations.

Cause of 'PF_MessageEnd_I: Unknown User Msg 119' console spam should be fixed, even for for WON, for loading, starting, or creating servers/connecting to games.

Enemies can jump to another enemy while in a 'failed' task, such as a headcrab on a counter in a1a2.bsp.  (Always waits for a chance to attack its first enemy: the scientist further away, even thouugh this is not possible, even if the player is much closer).
-short version: enemies more likely to re-pick enemies on failing to reach an enemy repeatedly.

CVar cl_mp5_kickbackmode actually added to the game.  Whoops.

Few other revisions to the satchel for odd cases, such as changing weapons immediately after detonating deployed satchels with satchel ammo left.

Even better fix for viewmodel animations, particularly holstering sometimes not playing but freezing the model as though it did.  Probably.

General clientside animation-event fix.  Should be no more cases of muzzle flashes or sounds called for by models clientside getting skipped or played multiple times in rapid succession (mostly viewmodels, such as reload sounds).
Clientside events like these on monsters may also be slightly more accurate in timing.

Gibbed zombies spawn human and alien gibs now.  Fixed bug of spawning no gibs sometimes.

Grenades tossed (secondary-throw) use the grenade roll animations, and land sideways instead of longways.

NEW CVAR: cl_viewmodel_fidget (defaults to 2).  This causes fidget animations for certain weapons to only play on demand (secondary fire; right-click) instead.  1 is retail behavior (randomly at idle), 0 is never.

CVar infiniteLongJumpCharge renamed to sv_longjump_chargemode

Chumtoad idle behavior unbroken - was supposed to randomly pick a new nearby location about every 15 seconds.  Whoops.

Slightly more delay between firing mp5 grenades, less delay before being able to return to primary fire.

General viewmodel fix for slight duplication of events restored (two shotgun shells from single-fire).

Hornet gun animation-less firing happens much less often.

Squad "alert friends of enemy" behavior restored.
Slight AI reorganization, test around.

Movement up/down fast moving platforms will have less extrme shifts in view compared to where the player actually is.

CVar weaponSelectSoundPlayOnMousewheel renamed to hud_moveselect_mousewheelsound.
CVar weaponSelectUsesReloadSounds renamed to hud_moveselect_sound.  Now 0, 1, or 2 instead of 0 or 1   (and is now 1 by default for the same behavior).

Spamming 'use' on NPC's no longer starts sentences every time, cooldown of about 2 seconds between use-related sentences.  Underlying logic otherwise, if any (pre-disaster spam annoyance or following/unfollowing) still happens.

Downward-incline smoothness slightly further improved.

NEW CVAR: cl_interp_view_standard, compare to cl_interp_view_extra.  Default grants no changes, but set to 2 is an alternate mid-air fix for crouching mid-air that may have a differnet feel.

NEW CVAR: sv_player_midair_fix, 0 for retail, 1 for the following:
-Support for an extension of midair logic that does similar slope-checks as walking.  That is, jumping 'up' stairs is possible without losing momentum.
-As a side-effect, reaching the top of several objects that were difficult to reach through even crouch-jumping (often some barrels and boxes) is much easier; reach of jumps slightly improved.
-This may also stop getting stuck in certain terrain, such as tracks in a2a1

Going up/down fast-moving platforms no longer causes the interp-smoothness to awkwardly lag behind the position of where the player actually is.  (best fix singleplayer, still improved otherwise)

Friendly sounds, uh, work.

Going up ladders while looking partially upward is no longer faster than while looking all the way upward (bypassed intended ladder speed).  Base ladder speed boosted to compensate.

Metal-hit sounds for metal NPCs (mainly sentries) changed.  Instead of player/pl_metal sounds, using debris/metal1 through 6.

Hornet hit-sound volumes reduced on hitting non-organic enemies or breakables, more of the material sound shows through.

CVars that previously couldn't be saved now can be (must quit from quitting normally ingame, not hitting the 'x' on a window or forcing the game to close in an unusual way, although this was always the case for any CVar saving).
-These CVars may also be set before a game begins.

This build and future builds will now be in 'release' mode.  Go figure!
CVars marked 'debugonly' will not show up in console autocomplete but can still be edited and set in the same way, case insensitive.

Kingpins no longer spam close-range shock blast attacks when close.  They will move in for melee during a cooldown.

Hitting certain flying monsters (ospreys) with explosives while sv_explosionknockback is above 0 will no longer cause interp issues (choppy movement).

Explosive projectiles that reach any edge of a skybox will no longer explode, only disappear.


GAUSS
NEW CVAR: gauss_mode, defaults to 1.  0 is retail-based, 1 is pre-release/alpha based, from a rough description.
~ Most of these changes apply to either gauss_mode choice.
- Secondary/charged damage determining changed.  Increases the final damage evenly each time ammo is depleted intead of increasing smoothly between ammo-usage.
- Max charge damage changed from 200 to ~175, scaled for lesser charges.
- Slightly longer delay between primary shots.
- Slightly greater chance of reflecting off surfaces, damage left in beam required for reflection changed from 10 to 8.
- Charged values also tied to skill values for gauss damage.
- Glow effect no longer stacks stuck balls in entry/exit points of map geometry hit.
- Smaller glow-effects that can be confused for stuck balls no longer generate either.
- Knockback for all gauss weapons increases less for more charge.  That is, 160 gauss damage gives less than twice the knockback of 80 gauss damage.  Knockback reduced overall.
- CVar 'gaussRecoilSendsUpInSP' default changed from 0 to 1.  If wanted, this can depend on CVar gauss_mode instead.
- Reflection-less and pierce-less secondary fire will also deal radial damage (like an explosion), but less so than the default ones for the same charge.
- Gauss charge force-fire no longer happens on running out of ammo at the moment of a full charge (starting a charge with retail gauss with 13 ammo maintains the charge when 0 ammo is reached).
- Gauss charge force-fire from running out of charge happens at the next ammo-usage cycle that sees there isn't enough ammo instead of the instant the ammo runs out (more noticeable in gauss mode #1).
- Primary fire bounces can no longer gib.

GAUSS MODE 0:
- Minimum ammo used for charge (1) no longer surpasses primary fire damage (20).  Instead, a charged shot of 1 ammo deals only 8 damage but becomes increasingly more efficient with more ammo used (already better than primary slightly at 2).

GAUSS MODE 1:
- Primary fire uses 5 ammo instead of 2, does more damage to compensate.  Delay between firing also increased.
- Secondary charges in increments of 5 ammo (single primary shot usage) instead of 1.  Longer delay between ammo-usage cycles for this reason.
  Charged damage is each ammo-usage cycle (5 ammo; primary shot) times primary damage.
  This means, charging is always as efficient as primary fire.

Map spawned dead-barnies no longer have mouths open.

Egon finally has the spiral-effect off on wide (secondary) fire under CVar egonEffectsMode set to 3 (the default), as intended.

New FVox line (armor_compromised.wav) played on taking significant damage to battery/armor.
Generic line (hev_damage.wav) may be played if no other queued methods are present on taking non-timed damage.

New CVar: sv_rpg_alpha_ammo (defaults to 1).  More RPG alpha logic when on, logic 'clipless' mode, complement for hud_rpg_alpha_ammo.

Chumtoads no longer granted by cheat commands (impulse 101, 'everything') in multiplayer.     Uh.  okay.

Chumtoads may be picked up by touching while crouching, as well as pressing use (e) while near them and looking at them.

cheat commands (impulse 101, 'everything') now give power canisters (injectables) too.

Pausing the game while a visual client model event is playing (muzzle flash) will not spawn the effect repeatedly.

Improvement to the client event fix for the player model (as seen in 3rd person or other players in multiplayer).
-Glock muzzle flash no longer stays for too long. 
-mp5 muzzle flash does not happen twice for firing once (fix most accurate in SP).

TURRETS (mainly mounted ceiling turrets, not the ones on stands (sentries))
Chumtoads playing dead now fool turrets.
All turrets have slightly better aim, better at hitting very small targets like chumtoads and snarks.
Non-sentry turrets go 'beserk' at 15 health or less instead of 10.  Also take longer to damage themselves into deactivating while beserk, and change direction more often while beserk.
Non-sentry turrets no longer appear to jitter their aim while firing at something standing still.
Standard turrets with an eye (miniturrets lack this) will no longer freeze brightness on acquiring a target.  It will raise to maximum and stay while there is a target.
Non-sentry turrets have a more involved post-death sequence.  They will spin around and fire quickly and generate explosion effects until ending on the original death animation after a few seconds.
-They will make off-pitch pings during post-death beserk and normal beserk.  Far more off-pitch pings on post-death.
-Turret eye (brightness) in standard turrets will flash on and off during post-death.


Ladder logic jump-off logic altered.  Only clean jump-presses can jump off, not holding it down.
Also, added a delay before getting back on the same ladder (avoid sticking to the ladder while jumping off).

Mirrored player (mirrorsDoNotReflectPlayer 0) has muzzle flash events in first and third person.  Yes, really.

Friendly talkers (scientist, barney) use less-random custom logic for picking idle anims, similar to a pre-release state.
- Talkers usually pick from standard idle animations that look the most plain (breathing).
- If 11 to 15 seconds have passed, a 'fidget' idle will be picked instead, and the timer is reset.
- Picking any other animation also resets the timer.  Must be 11 to 15 seconds since staying in a neutral activity (idle, turning in place, crouching, etc.).

Headcrabs only use the run animation for movement on hard mode (was undocumented before)

Scientists will use the 'checktie' animation when complaining about ties.
Scientists will use the 'crouchstand' animation when enemies aren't around to change from crouch to standing more smoothly.

Python (revolver) between-shot delay increased from 0.75 to 0.9.

Friendly: now with pain-sounds.  Sweet dreams!

pathfindLargeBoundFix: set to 1.  The friendly uses a slighty wider hull, less tall (more like the panthereye) and now benefits from this CVar as well.
- any side-effects or slowdowns caused by 'pathfindLargeBoundFix 1' should be reported, testing this out.
~ SELF NOTE Also consider CVars 'pathfindRampFix' and 'pathfindLooseMapNodes'.  Both default to off, the latter is more extreme.   pathfindRampFix doesn't appear to help large-bounded things go down ramps at least.

Slight AI performance: picking the same schedule as a previous one that finished in the same frame (ran through all its tasks without waiting for another frame of game logic) stops updating the schedule in that frame.
The maximum number of schedules able to be re-picked in one frame changed from 25 to 6 (retail is 10).

Slight AI improvement: something facing off from ideal but still able to attack from a place without a direct path to the enemy (like a gargantua across rails) will still be able to turn and face if an attack were possible.
- Not yet used in many places yet, but a similar idea is already present in sevearl monsters, especially hassault and hgrunt.

NEW CVars: pathfindForcePointHull, pathfindIgnoreNearestNodeCache, pathfindIgnoreStaticRoutes.
In maps where 'pathfindIgnoreStaticRoutes' being 1 makes a difference in pathfinding through nodes, their node routes should be rebuilt (saved to a file, do it on our end and ship them out).

