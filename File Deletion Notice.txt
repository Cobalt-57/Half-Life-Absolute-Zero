
1) dlls/AI_BaseNPC_Schedule.cpp removed (clone of dlls/schedule.cpp)
The file "AI_BaseNPC_Schedule.cpp" was deemed a clone of "schedule.cpp" in the starting SDK as is.  It has been removed.
Unlike schedule.cpp, AI_BaseNPC_Schedule.cpp was aslo not in the Project's build-order (Visual Studio's solution explorer shows a list of any files involved in compiling.  schedule.cpp was present in the "hl" build path's "Source folder", while AI_BaseNPC_Schedule.cpp, which was nowhere to be found.
Removing AI_BaseNPC_Schedule.cpp appears to have no consequences.  It was likely a backup of schedule.cpp, which was never beyond the state seen here (on SDK arrival).


2) dlls/glock.cpp removed (clone of dlls/wpn_shared/hl_wpn_glock.cpp). REPLACED NOW - SEE 2b BELOW!
Although glock.cpp is not an exact clone of hl_wpn_glock.cpp, the areas it differs in are exclusive to glock.cpp (as opposed to common among the rest of the weapons, such as skipping a few filtered calls, like using gpGlobals->time straight away instead of UTIL_WeaponTimeBase like retail).
Also, glock.cpp calls some things in GlockFire that retail seems to leave to the event, client-side, in ev_hldm.cpp, like brass ejection.
It is believable that glock.cpp is a version of hl_wpn_glock.cpp from an earlier version of development that does some things differently / put some responsibilities in different places.  Commenting out all of glock.cpp and running shows that it has no impact on the game too.  This makes it a strong candidate for deletion alone (also not a reference for valuable script; it is all outdated).
One oteworthy thing was setting clip size to 18 instead of to the default 17 when reloading with at least one bullet still in clip.  This has to do with the glock having a bullet left in the firing chamber (but clip sizes are still a solid 12).  This was behavior present before some patch in the early WON days.  This is now optional by CVar support (glockOldReloadLogic).
Furthermore, glock.cpp is not present in the solution explorer of Visual Studio for any projects.  This is practically proof it is simply not read.

2b) What used to be "dlls/wpn_shared/hl_wpn_glock.cpp" has been renamed to "dlls/glock.cpp" to be more consistent with the naming convensions and placement of other weapons.
No other file belongs in the "wpn_shared" folder, and being "shared" is not a special aspect of the glock. All player weapon files are compiled both clientside and serverside. It does not need to be placed / named so differently.

    

3) Although not deleted (slightly corrected for what errors remain to show up better at least), the following files:
    cl_dll/overview.h
    cl_dll/overview.cpp
...have been excluded from the build. It used to be a grey area: overview.h was included (but never referred to thankfully), but overview.cpp was excluded (appeared in the soluton explorer with a red minus? no idea why it even showed up at all; it got ignored this way). When removed / readded, it has issues, mostly with missing engine function calls. Try readding and compiling to see those.
Again, as of now, these files are completely excluded. No problems noticed from doing that.

4) cl_dll/soundsystem.cpp has been deleted. It was never included in the compile and is seen as irrelevant.

5) dlls/tempmonster.cpp has been deleted. It is made obsolete by the more complete monster template at dlls/help/templpatemonster.h & .cpp.
-also, tempmonster.cpp has been removed from the serverside compile. Why was it part of that to begin with?

6) cl_dll/util_vector.h and dlls/vector.h have been deleted and replaced with game_shared/NEW/vector_shared.h to remove redundancy. References to either updated.

7) dlls/monsters.h deleted, most of its contents were moved to basemonster.h. The CGib class is now in cbase.h, and the CUSTOM_SCHEDULES, DEFINE_CUSTOM_SCHEDULES, and IMPLEMENT_CUSTOM_SCHEDULES preprocessor methods were moved to util_preprocessor.h.
~Also, Monsters.cpp has now been renamed to basemonster.cpp, which did not exist before.




QUESTIONABLE:
*  Sound file "tentacle/te_flies1.wav" is unused and practically identical to the used "ambient/flies.wav".
   File size is slightly different but I can't hear a difference. Safe to delete this?
*  Exact same case with "tentacle/te_squirm2.wav" being unused compared to "ambient/squirm2".
   
   
*Some other compile changes:
-cl_dll/cl_util.h was completely missing from the compile (header files are here just for organization; they are included by .cpp files as needed).
-dlls/game.h was completely missing from the compile.
-dlls/map_rules.h was completely missing from the compile.
-cl_dll/tf_defs.h was completely missing from the compile.
-cl_dll/parsemsg.h was under the "Source" folder and not "Header"? Changed.
-new file dlls/util_entity.cpp added to the client compile. These methods used to be inline and thus fully included in the client before (used to all in a .h file, now implementations moved to the .cpp file), not dummied out, and so should be present in the client as well.
-cl_dll/in_defs.h deleted.  Tiny, and the PITCH, etc. constants may as well be shared (util_shared.h).

---Various files across cl_dll and dlls moved to "not_compiled" subdirectories. These files are never included or involved in the compile, consider deleting if everything in them is redundant, irrelevant or has no meaningful insights to early development.
 

